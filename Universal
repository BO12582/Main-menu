game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Credit",
                Text = "Bohight123",
                 Duration = 15})

if game:GetService("CoreGui"):FindFirstChild("Emotes") then
    game:GetService("CoreGui"):FindFirstChild("Emotes"):Destroy()
end

wait(1)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "CamLockGui"
gui.ResetOnSpawn = false

-- Toggle Button
local lockBtn = Instance.new("TextButton")
lockBtn.Size = UDim2.new(0, 100, 0, 30)
lockBtn.Position = UDim2.new(0, 10, 0, 10)
lockBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
lockBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
lockBtn.Text = "Lock"
lockBtn.Parent = gui

-- Fold/Unfold Toggle
local foldBtn = Instance.new("TextButton")
foldBtn.Size = UDim2.new(0, 30, 0, 30)
foldBtn.Position = UDim2.new(0, 115, 0, 10)
foldBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
foldBtn.Text = "-"
foldBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
foldBtn.Parent = gui

-- Dot
local dot = Instance.new("Frame")
dot.Size = UDim2.new(0, 6, 0, 6)
dot.Position = UDim2.new(0.5, -3, 0.5, -3)
dot.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
dot.BorderSizePixel = 0
dot.Visible = false
dot.Parent = gui

-- Dragging
local dragging, dragOffset = false, Vector2.new()
lockBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragOffset = input.Position - lockBtn.Position
	end
end)
lockBtn.InputChanged:Connect(function(input)
	if dragging then
		lockBtn.Position = UDim2.new(0, input.Position.X - dragOffset.X, 0, input.Position.Y - dragOffset.Y)
		foldBtn.Position = lockBtn.Position + UDim2.new(0, 105, 0, 0)
	end
end)
lockBtn.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch then dragging = false end
end)

-- State
local locked, target, fast = false, nil, false
local highlight, outline, lastUpdate

-- Obstacle Check
local function isBlocked(player)
	local camPos = Camera.CFrame.Position
	local targetPos = player.Character.HumanoidRootPart.Position
	local direction = (targetPos - camPos).Unit * (targetPos - camPos).Magnitude
	local ray = Ray.new(camPos, direction)
	local hit = workspace:FindPartOnRay(ray, LocalPlayer.Character)
	return hit ~= nil
end

-- Highlight Player
local function highlightPlayer(player)
	local sb = Instance.new("SelectionBox")
	sb.Adornee = player.Character.HumanoidRootPart
	sb.Parent = player.Character.HumanoidRootPart
	sb.Color3 = Color3.fromRGB(255, 0, 0)
	sb.LineThickness = 0.05
	sb.SurfaceTransparency = 0.5
	return sb
end

-- Black Outline
local function createOutline()
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 100, 0, 100)
	frame.Position = UDim2.new(0.5, -50, 0.5, -50)
	frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	frame.BackgroundTransparency = 0.8
	frame.BorderSizePixel = 5
	frame.Visible = false
	frame.Parent = gui
	return frame
end

-- Lock Toggle
lockBtn.MouseButton1Click:Connect(function()
	locked = not locked
	if locked then
		for _, p in pairs(Players:GetPlayers()) do
			if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
				target = p
				break
			end
		end
	else
		target = nil
		if highlight then highlight:Destroy() highlight = nil end
		if outline then outline:Destroy() outline = nil end
	end
end)

-- Fold Toggle
foldBtn.MouseButton1Click:Connect(function()
	local isVisible = lockBtn.Visible
	lockBtn.Visible = not isVisible
	foldBtn.Text = isVisible and "+" or "-"
	foldBtn.Position = isVisible and lockBtn.Position or foldBtn.Position
end)

-- Toggle Dot on tap
gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch then
		dot.Visible = not dot.Visible
		if dot.Visible then input.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) end
	end
end)

-- Player Auto Reset
Players.PlayerAdded:Connect(function(p)
	p.CharacterAdded:Connect(function()
		if p == target then
			highlight = highlightPlayer(p)
			outline = createOutline()
		end
	end)
	p.CharacterRemoving:Connect(function()
		if p == target then
			if highlight then highlight:Destroy() highlight = nil end
			if outline then outline:Destroy() outline = nil end
		end
	end)
end)

-- Camera Follow
RunService.RenderStepped:Connect(function()
	if locked and target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		if isBlocked(target) then
			lockBtn.Text = "Blocked"
			return
		end

		lockBtn.Text = "Locked"
		if fast and tick() - (lastUpdate or 0) < 0.1 then return end
		lastUpdate = tick()
		local tPos = target.Character.HumanoidRootPart.Position
		local cPos = Camera.CFrame.Position
		Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(cPos, tPos), 0.75)

		if not highlight then highlight = highlightPlayer(target) end
		if not outline then outline = createOutline() end
		outline.Visible = true
	else
		lockBtn.Text = "Lock"
		if highlight then highlight:Destroy() highlight = nil end
		if outline then outline:Destroy() outline = nil end
	end
end)
