game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Credit",
                Text = "Bohight123",
                 Duration = 15})

local plr = game:GetService("Players").LocalPlayer
local cam = workspace.CurrentCamera
local rs = game:GetService("RunService")
local ts = game:GetService("TweenService")
local uis = game:GetService("UserInputService")

local gui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
gui.Name = "CamLockGui"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false

-- Frame
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 160, 0, 130)
frame.Position = gui:GetAttribute("SavedPos") or UDim2.new(1, -170, 1, -150)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.fromRGB(255, 255, 255)
frame.Active = true
frame.Draggable = true
frame.InputEnded:Connect(function(i)
	if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
		gui:SetAttribute("SavedPos", frame.Position)
	end
end)

-- Lock Button
local lockBtn = Instance.new("TextButton", frame)
lockBtn.Size = UDim2.new(1, -20, 0, 50)
lockBtn.Position = UDim2.new(0, 10, 0, 10)
lockBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
lockBtn.TextColor3 = Color3.new(1, 1, 1)
lockBtn.Font = Enum.Font.SourceSansBold
lockBtn.TextScaled = true
lockBtn.Text = "Lock: OFF"

-- Fast Mode Button
local fastBtn = Instance.new("TextButton", frame)
fastBtn.Size = UDim2.new(1, -20, 0, 40)
fastBtn.Position = UDim2.new(0, 10, 0, 70)
fastBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
fastBtn.TextColor3 = Color3.new(1, 1, 1)
fastBtn.Font = Enum.Font.SourceSans
fastBtn.TextScaled = true
fastBtn.Text = "Fast: OFF"

-- Collapse Button
local collapse = Instance.new("TextButton", frame)
collapse.Size = UDim2.new(0, 30, 0, 30)
collapse.Position = UDim2.new(1, -35, 0, 5)
collapse.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
collapse.Text = "-"
collapse.TextColor3 = Color3.new(1, 1, 1)
collapse.Font = Enum.Font.SourceSansBold
collapse.TextScaled = true

-- Mini Button
local mini = Instance.new("TextButton", gui)
mini.Size = UDim2.new(0, 60, 0, 30)
mini.Position = gui:GetAttribute("MiniPos") or UDim2.new(1, -70, 1, -40)
mini.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
mini.Text = "+"
mini.TextColor3 = Color3.new(1, 1, 1)
mini.Font = Enum.Font.SourceSansBold
mini.TextScaled = true
mini.Visible = false
mini.Draggable = true
mini.InputEnded:Connect(function(i)
	if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
		gui:SetAttribute("MiniPos", mini.Position)
	end
end)

-- Fade Function
local function fade(obj, show)
	for _, v in pairs(obj:GetDescendants()) do
		if v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("Frame") then
			ts:Create(v, TweenInfo.new(0.25), {
				BackgroundTransparency = show and 0 or 1,
				TextTransparency = v:IsA("TextLabel") or v:IsA("TextButton") and (show and 0 or 1)
			}):Play()
		end
	end
end

-- Minimize
local minimized = false
local function minimize()
	local abs = collapse.AbsolutePosition
	mini.Position = UDim2.new(0, abs.X, 0, abs.Y)
	mini.AnchorPoint = Vector2.new(0, 0)
	fade(frame, false)
	wait(0.25)
	frame.Visible = false
	mini.Visible = true
	minimized = true
end

local function restore()
	frame.Visible = true
	mini.Visible = false
	fade(frame, true)
	minimized = false
end

collapse.MouseButton1Click:Connect(minimize)
mini.MouseButton1Click:Connect(restore)

-- Lock Logic
local locked, fast, target, lastUpdate = false, false, nil, 0

local function getNearest()
	local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
	if not root then return nil end
	local nearest, dist = nil, math.huge
	for _, p in pairs(game.Players:GetPlayers()) do
		if p ~= plr and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
			local d = (root.Position - p.Character.HumanoidRootPart.Position).Magnitude
			if d < dist then
				dist = d
				nearest = p
			end
		end
	end
	return nearest
end

lockBtn.MouseButton1Click:Connect(function()
	if not locked then
		target = getNearest()
		if target then
			locked = true
			cam.CameraType = Enum.CameraType.Custom
			lockBtn.Text = "Lock: ON"
		end
	else
		locked = false
		target = nil
		lockBtn.Text = "Lock: OFF"
	end
end)

fastBtn.MouseButton1Click:Connect(function()
	fast = not fast
	fastBtn.Text = "Fast: " .. (fast and "ON" or "OFF")
end)

rs.RenderStepped:Connect(function()
	if locked and target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		local root = target.Character.HumanoidRootPart
		local origin = cam.CFrame.Position
		local dir = (root.Position - origin)
		local ray = workspace:Raycast(origin, dir, RaycastParams.new())
		local params = RaycastParams.new()
		params.FilterType = Enum.RaycastFilterType.Blacklist
		params.FilterDescendantsInstances = {plr.Character, target.Character}
		params.IgnoreWater = true

		local result = workspace:Raycast(origin, dir.Unit * dir.Magnitude, params)
		if not result then
			if fast and tick() - lastUpdate < 0.1 then return end
			lastUpdate = tick()
			cam.CFrame = cam.CFrame:Lerp(CFrame.new(origin, root.Position), 0.75)
		end
	end
end)

-- Crosshair
local dot = Instance.new("Frame", gui)
dot.Size = UDim2.new(0, 6, 0, 6)
dot.Position = UDim2.new(0.5, -3, 0.5, -3)
dot.BackgroundColor3 = Color3.new(1, 1, 1)
dot.BorderSizePixel = 0
dot.AnchorPoint = Vector2.new(0.5, 0.5)
dot.BackgroundTransparency = 0.3

-- Touch = center
uis.TouchTap:Connect(function()
	local center = Vector2.new(cam.ViewportSize.X / 2, cam.ViewportSize.Y / 2)
	pcall(function()
		local dummyInput = Instance.new("InputObject")
		dummyInput.Position = center
	end)
end)
